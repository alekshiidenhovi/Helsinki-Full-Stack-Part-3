{"version":3,"sources":["components/Filter.js","components/Person.js","components/Message.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","updateFilter","value","onChange","Person","person","removeName","name","number","onClick","id","Message","type","message","className","baseUrl","getData","request","then","response","data","functions","get","axios","create","newObject","post","update","put","remove","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","messageType","setMessageType","setMessage","useEffect","personService","input","sendMessage","setTimeout","sendError","deletedPerson","find","window","confirm","catch","error","event","target","onSubmit","preventDefault","nameObject","some","oldPerson","returnedPerson","map","concat","toLowerCase","startsWith","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbaabebb.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Filter = ({ filter, updateFilter }) => {\n  return (\n    <div>\n      filter shown with <input value={filter} onChange={updateFilter} />\n    </div>\n  )\n}\n\nexport default Filter","import React from \"react\"\n\nconst Person = ({ person, removeName }) => {\n  return (\n    <div>\n      <p>{person.name} {person.number}</p>\n      <button onClick={() => removeName(person.id)}>delete</button>\n    </div>\n  )\n}\n\nexport default Person","import React from \"react\"\n\nconst Message = ({ type, message }) => {\n  if (type === null) {\n    return null\n  } else if (type === \"success\") {\n    return (\n      <div className=\"message success\">{message}</div>\n    )\n  } else {\n    return (\n      <div className=\"message failure\">{message}</div>\n    )\n  } \n}\n\nexport default Message","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getData = request => {\n  return request.then(response => response.data)\n}\n\nconst get = () => {\n  const request = axios.get(baseUrl)\n  return getData(request)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return getData(request)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return getData(request)\n}\n\nconst remove = id => axios.delete(`${baseUrl}/${id}`)\n\nconst functions = { get, create, update, remove }\nexport default functions","import React, { useState, useEffect } from 'react'\nimport Filter from \"./components/Filter\"\nimport Person from \"./components/Person\"\nimport Message from \"./components/Message\"\nimport personService from \"./services/persons\"\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ messageType, setMessageType ] = useState(null)\n  const [ message, setMessage ] = useState('')\n\n  useEffect(() => {\n    personService\n    .get()\n    .then(setPersons)\n  }, [])\n\n  const sendMessage = (type, message) => {\n    if (type === null) {\n      return \n    } else {\n      setMessageType(type)\n      setMessage(message)\n      setTimeout(() => setMessageType(null), 5000)\n    }\n  }\n\n  const sendError = (name, deletedPerson) => {\n    sendMessage('failure', `Information of ${name} has already been removed from the server`)\n    setPersons(persons.filter(person => person.name !== deletedPerson.name))\n  }\n\n  const addName = event => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if (persons.some(person => person.name === newName)) {\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)) {\n        // Update name\n        const oldPerson = persons.find(person => person.name === newName)\n        personService\n        .update(oldPerson.id, nameObject)\n        .then(returnedPerson => setPersons(persons.map(person => {\n          sendMessage('success', `Replaced ${oldPerson.name} with ${newName}`)\n          return person.name === newName ? returnedPerson : person\n        })))\n        .catch(error => sendError(newName, nameObject))\n      }\n    } else {\n      // Create a new name\n      personService\n      .create(nameObject)\n      .then(returnedPerson => {\n        sendMessage('success', `Added ${returnedPerson.name}`)\n        setPersons(persons.concat(returnedPerson))\n      })\n    }\n    // Reset name and number fields\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n\n  const removeName = id => {\n    const person = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n      .remove(id)\n      .then(() => {\n        sendMessage('success', `Removed ${person.name}`)\n        setPersons(persons.filter(person => person.id !== id))\n      })\n      .catch(error => sendError(person.name, person))\n    }\n  }\n\n  const personsToShow = input => persons.filter(person => person.name.toLowerCase().startsWith(input.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message type={messageType} message={message} />\n      <Filter filter={newFilter} updateFilter={(event) => setNewFilter(event.target.value)} />\n      <h2>Add a new</h2>\n      <form onSubmit={addName}>\n        <div>name: <input value={newName} onChange={(event) => setNewName(event.target.value)}/></div>\n        <div>number: <input value={newNumber} onChange={(event) => setNewNumber(event.target.value)} /></div>\n        <div><button type=\"submit\">add</button></div>\n      </form>\n      <h2>Numbers</h2>\n      {personsToShow(newFilter).map(person => <Person key={person.id} person={person} removeName={removeName} />)}\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}